{"version":3,"file":"angular-typeorm.js","sources":["../../../projects/angular-typeorm/src/lib/angular-typeorm.module.ts","../../../projects/angular-typeorm/src/public-api.ts","../../../projects/angular-typeorm/src/angular-typeorm.ts"],"sourcesContent":["/* eslint-disable no-constant-condition */\r\nimport { CommonModule } from '@angular/common';\r\nimport { ConnectionOptions, createConnection } from 'typeorm';\r\nimport {\r\n  NgModule,\r\n  ModuleWithProviders,\r\n  APP_BOOTSTRAP_LISTENER,\r\n} from '@angular/core';\r\n\r\n// @dynamic\r\n@NgModule({\r\n  exports: [],\r\n  providers: [],\r\n  declarations: [],\r\n  imports: [CommonModule],\r\n})\r\nexport class AngularTypeormModule {\r\n  /**\r\n   * @param duration time in seconds\r\n   * @description Pause for given amount of time\r\n   */\r\n  private static wait(duration: number): Promise<void> {\r\n    return new Promise((resolve, __) => {\r\n      setTimeout(() => {\r\n        resolve();\r\n      }, duration * 1000);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param configs  connection options\r\n   * @description Initialize TypeOrm connection for root\r\n   */\r\n  static forRoot(\r\n    configs: ConnectionOptions\r\n  ): ModuleWithProviders<AngularTypeormModule> {\r\n    return {\r\n      ngModule: AngularTypeormModule,\r\n      providers: [\r\n        {\r\n          provide: APP_BOOTSTRAP_LISTENER,\r\n          useFactory: () => async () => {\r\n            let retryCount = 0;\r\n            while (true) {\r\n              try {\r\n                return await createConnection(configs);\r\n              } catch (err) {\r\n                retryCount += 1;\r\n                console.error(\r\n                  `TYPEORM CONNECTION ATTEMPT ${retryCount} FAILED: `,\r\n                  err\r\n                );\r\n                await this.wait(5);\r\n                continue;\r\n              }\r\n            }\r\n          },\r\n          multi: true,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of angular-typeorm\r\n */\r\n\r\nexport * from './lib/angular-typeorm.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;AASA;MAOa,oBAAoB;;;;;IAKvB,OAAO,IAAI,CAAC,QAAgB;QAClC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC7B,UAAU,CAAC;gBACT,OAAO,EAAE,CAAC;aACX,EAAE,QAAQ,GAAG,IAAI,CAAC,CAAC;SACrB,CAAC,CAAC;KACJ;;;;;IAMD,OAAO,OAAO,CACZ,OAA0B;QAE1B,OAAO;YACL,QAAQ,EAAE,oBAAoB;YAC9B,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,sBAAsB;oBAC/B,UAAU,EAAE,MAAM;wBAChB,IAAI,UAAU,GAAG,CAAC,CAAC;wBACnB,OAAO,IAAI,EAAE;4BACX,IAAI;gCACF,OAAO,MAAM,gBAAgB,CAAC,OAAO,CAAC,CAAC;6BACxC;4BAAC,OAAO,GAAG,EAAE;gCACZ,UAAU,IAAI,CAAC,CAAC;gCAChB,OAAO,CAAC,KAAK,CACX,8BAA8B,UAAU,WAAW,EACnD,GAAG,CACJ,CAAC;gCACF,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gCACnB,SAAS;6BACV;yBACF;qBACF,CAAA;oBACD,KAAK,EAAE,IAAI;iBACZ;aACF;SACF,CAAC;KACH;;;YAnDF,QAAQ,SAAC;gBACR,OAAO,EAAE,EAAE;gBACX,SAAS,EAAE,EAAE;gBACb,YAAY,EAAE,EAAE;gBAChB,OAAO,EAAE,CAAC,YAAY,CAAC;aACxB;;;ACfD;;;;ACAA;;;;;;"}